package com.sad.code;

import com.sad.code.solutions.Euler2;
import com.sad.code.util.LogTimerAspect;
import io.qameta.allure.Description;
import io.qameta.allure.Link;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.test.context.SpringBootTest;

import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * @see Euler2
 */
@EnableAutoConfiguration
@SpringBootTest(classes = {EmptyService.class, LogTimerAspect.class, Euler2.class})
public class Euler2Test {

    @Autowired
    Euler2 euler2;

    @ParameterizedTest
    @CsvSource({
            "100, 188",
            "1000, 798",
            "10000, 14328",
            "100000, 60696",
            "1000000, 1089154",
            "4000000, 4613732",
            "10000000, 19544084",
            "100000000, 82790070",
            //overflow "1000000000, 2333333331666666_6_8_8"
    })
    @Link("https://projecteuler.net/problem=2")
    @Description(
            "Each new term in the Fibonacci sequence is generated by adding the previous two terms.\n" +
            "By starting with 1 and 2, the first 10 terms will be:\n" +
            "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n" +
            "By considering the terms in the Fibonacci sequence whose values do not exceed four million,\n" +
            "find the sum of the even-valued terms."
    )
    public void test(final long from1UnderThisValue, final long expectingResult) {
        assertEquals(expectingResult, euler2.smallCacheSolution(from1UnderThisValue));
    }
}